
import React, { useEffect, useState } from 'react';
import { View, Text, ActivityIndicator, Linking, TouchableOpacity, Alert } from 'react-native';
import { isNotificationEnabled } from '@/lib/notifications/push-notification';
import { ThemedView } from './themed-view';
import { ThemedText } from './themed-text';
import { useColorScheme } from '@/hooks/use-color-scheme';

export function NotificationSettings() {
  const [isEnabled, setIsEnabled] = useState(false);
  const [isLoading, setIsLoading] = useState(true);
  const colorScheme = useColorScheme();
  const isDark = colorScheme === 'dark';

  useEffect(() => {
    checkStatus();
  }, []);

  const checkStatus = async () => {
    const enabled = await isNotificationEnabled();
    setIsEnabled(enabled);
    setIsLoading(false);
  };

  if (isLoading) {
    return (
      <ThemedView className="p-4 items-center">
        <ActivityIndicator size="small" color={isDark ? '#fff' : '#000'} />
      </ThemedView>
    );
  }

  return (
    <ThemedView className="flex-1 p-4">
      {/* Status */}
      <View className={`p-4 rounded-lg mb-4 ${isDark ? 'bg-gray-800' : 'bg-gray-100'}`}>
        <View className="flex-row items-center justify-between mb-2">
          <ThemedText className="text-base font-semibold">
            Tr·∫°ng th√°i th√¥ng b√°o
          </ThemedText>
          <View className={`px-3 py-1 rounded-full ${
            isEnabled 
              ? 'bg-green-500/20' 
              : 'bg-gray-500/20'
          }`}>
            <Text className={`text-xs font-bold ${
              isEnabled ? 'text-green-500' : 'text-gray-500'
            }`}>
              {isEnabled ? 'B·∫¨T' : 'T·∫ÆT'}
            </Text>
          </View>
        </View>
        
        <ThemedText className="text-sm opacity-70">
          {isEnabled 
            ? '‚úÖ B·∫°n s·∫Ω nh·∫≠n th√¥ng b√°o khi c√≥ phim ho·∫∑c t·∫≠p m·ªõi' 
            : '‚ùå Vui l√≤ng b·∫≠t th√¥ng b√°o trong C√†i ƒë·∫∑t ƒë·ªÉ nh·∫≠n th√¥ng tin m·ªõi nh·∫•t'
          }
        </ThemedText>
      </View>

      {/* Action */}
      {!isEnabled && (
        <TouchableOpacity
          onPress={() => Linking.openSettings()}
          className={`p-4 rounded-lg ${isDark ? 'bg-blue-600' : 'bg-blue-500'}`}
        >
          <Text className="text-white text-center font-semibold">
            ‚öôÔ∏è M·ªü C√†i ƒë·∫∑t h·ªá th·ªëng
          </Text>
        </TouchableOpacity>
      )}

      {/* Info */}
      <View className="mt-6 px-2">
        <ThemedText className="text-sm opacity-70 mb-3">
          üìå B·∫°n s·∫Ω nh·∫≠n th√¥ng b√°o khi:
        </ThemedText>
        <View className="ml-4 space-y-2">
          <ThemedText className="text-sm opacity-60 mb-2">
            ‚Ä¢ C√≥ t·∫≠p phim m·ªõi ƒë∆∞·ª£c ph√°t h√†nh
          </ThemedText>
          <ThemedText className="text-sm opacity-60 mb-2">
            ‚Ä¢ C√≥ phim m·ªõi ƒë∆∞·ª£c th√™m v√†o
          </ThemedText>
          <ThemedText className="text-sm opacity-60">
            ‚Ä¢ C√≥ c·∫≠p nh·∫≠t quan tr·ªçng
          </ThemedText>
        </View>
      </View>

      {/* How it works */}
      <View className={`mt-6 p-4 rounded-lg ${isDark ? 'bg-gray-800' : 'bg-gray-100'}`}>
        <ThemedText className="text-xs font-semibold mb-2 opacity-70">
          üí° C√°ch ho·∫°t ƒë·ªông:
        </ThemedText>
        <ThemedText className="text-xs opacity-60">
          Khi c√≥ th√¥ng b√°o m·ªõi, b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c notification tr√™n ƒëi·ªán tho·∫°i. 
          Nh·∫•n v√†o notification ƒë·ªÉ xem ngay phim ho·∫∑c t·∫≠p m·ªõi.
        </ThemedText>
      </View>
    </ThemedView>
  );
}
